// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  days          Day[]
  places        Location[]
  eventTypes    String[]  @default([])
  locationTypes String[]  @default([])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Day {
  id              String      @id @default(cuid())
  userId          String      
  user            User        @relation(fields: [userId], references: [id])
  createdAt       DateTime    @default(now())
  startTime       DateTime    
  endTime         DateTime   
  day             Int
  month           Int
  year            Int
  note            String
  AccomodationId  String?    
  Accomodation    Location?   @relation(fields: [AccomodationId], references: [id])
  events      Event[]

  @@unique([day, month, year, userId])
}

model Event {
  id          String        @id @default(cuid())
  dayId       String
  day         Day           @relation(fields: [dayId], references: [id])
  
  name        String
  type        String? 
  comment     String?
  locationId  String?
  location    Location?     @relation(fields: [locationId], references: [id])
        
}

model Location {
  id          String      @id @default(cuid())
  userId      String      
  user        User        @relation(fields: [userId], references: [id])
  
  name        String
  address     String
  type        String
  comment     String?
  
  events      Event[]
  days        Day[]

  @@unique([userId, name])
  @@unique([userId, address])
}
